{"version":3,"file":"static/js/746.fddfcc3b.chunk.js","mappings":"4PAGaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtBC,GAAWC,EAAAA,EAAAA,MAIjB,OACE,4BACE,mBAAQC,KAAK,SAASC,QAJL,kBAAMH,GAASI,EAAAA,EAAAA,eAAcL,EAAQM,IAArC,EAIjB,qBAGA,4BACGN,EAAQO,KADX,KACmBP,EAAQQ,YAKhC,E,mBCjBYC,EAAOC,EAAAA,GAAAA,GAAH,kHCIJC,EAAiB,WAC5B,IAAMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,gBAEvBC,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,cAQrBC,EALGL,EAASG,QAAO,SAAAf,GAAO,OAC5BA,EAAQO,KAAKW,cAAcC,SAASJ,EAAOG,cADf,IAWhC,OAJAE,QAAQC,IAAI,aAAcT,GAC1BQ,QAAQC,IAAI,WAAYN,GACxBK,QAAQC,IAAI,oBAAqBJ,IAG/B,0BACE,wBACGA,EAAgBK,KAAI,SAAAtB,GAAO,OAC1B,SAACS,EAAD,WACE,SAACV,EAAD,CAAaC,QAASA,KADbA,EAAQM,GADO,OAQnC,E,UChCYiB,EAASb,EAAAA,GAAAA,OAAH,wE,UCFNI,EAAiB,SAAAU,GAAK,OAAIA,EAAMZ,SAASa,KAAnB,EAEtBC,EAAkB,SAAAF,GAAK,OAAIA,EAAMZ,SAASe,SAAnB,ECKvBC,EAAc,WACzB,IAAM3B,GAAWC,EAAAA,EAAAA,MACXU,GAAWC,EAAAA,EAAAA,IAAYC,GA4B7B,OACE,kBAAMe,SA3Ba,SAAAC,GACnBA,EAAIC,iBAEJ,IAH0B,EAGpBC,EAAOF,EAAIG,OACX1B,EAAOyB,EAAKE,SAAS3B,KAAK4B,MAC1B3B,EAASwB,EAAKE,SAAS1B,OAAO2B,MALV,UAOJvB,GAPI,IAO1B,2BAAgC,CAC9B,GAD8B,QAClBL,OAASA,EAGnB,YADAa,QAAQC,IAAI,kCAGf,CAbyB,+BAe1BpB,GAASmC,EAAAA,EAAAA,IAAW,CAAE7B,KAAAA,EAAMC,OAAAA,KAC5BwB,EAAKK,OAQN,EAGC,WACE,mBAAOC,QAAQ,GAAf,kBAEE,mBACA,kBACEnC,KAAK,OACLI,KAAK,OAELgC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,mBACA,mBAAOH,QAAQ,GAAf,oBAEE,mBACA,kBACEnC,KAAK,MACLI,KAAK,SAELgC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBACA,SAAClB,EAAD,CAAQpB,KAAK,SAAb,2BAGL,E,UC/DYuC,EAAY,SAAC,GAAe,IAAbP,EAAY,EAAZA,MACpBlC,GAAWC,EAAAA,EAAAA,MAQjB,OACE,mBAAOoC,QAAQ,GAAf,mCAEE,mBACA,kBACEnC,KAAK,OACLI,KAAK,iBACL4B,MAAOA,EACPI,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EAERE,SAlBqB,SAAAb,GACzB,IAAMf,EAASe,EAAIc,cAAcT,MACjClC,GAAS4C,EAAAA,EAAAA,cAAa9B,IACtBK,QAAQC,IAAI,WAAYN,EACzB,MAkBF,ECnBc,SAAS+B,IACtB,IAAM7C,GAAWC,EAAAA,EAAAA,MACXyB,GAAYd,EAAAA,EAAAA,IAAYa,GAK9B,OAJAqB,EAAAA,EAAAA,YAAU,WACR9C,GAAS+C,EAAAA,EAAAA,MACV,GAAE,CAAC/C,KAGF,iCACE,SAACgD,EAAA,EAAD,WACE,gDAGF,SAACrB,EAAD,KACA,yBAAMD,GAAa,4BACnB,SAACe,EAAD,KACA,SAAC/B,EAAD,MAGL,C","sources":["components/ContactsItem/ContactsItem.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/ContactsForm/ContactsForm.styled.js","redux/contacts/selectors.js","components/ContactsForm/ContactsForm.jsx","components/ContactsFilter/ContactsFilter.jsx","pages/Contacts.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <div>\n      <button type=\"button\" onClick={handleDelete}>\n        Delete\n      </button>\n      <span>\n        {contact.name}: {contact.number}\n      </span>\n      {/* <img src={contact.avatar} /> */}\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  font-size: 24px;\n  width: 500px;\n  display: flex;\n  justify-content: space-between;\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { ContactItem } from 'components/ContactsItem/ContactsItem';\nimport { Item } from './ContactsList.styled';\n\nexport const ContactListBox = () => {\n  const contacts = useSelector(selectContacts);\n\n  const filter = useSelector(selectFilter);\n\n  const getVisibleContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  console.log('contacts: ', contacts);\n  console.log('filter: ', filter);\n  console.log('visibleContacts: ', visibleContacts);\n\n  return (\n    <div>\n      <ul>\n        {visibleContacts.map(contact => (\n          <Item key={contact.id}>\n            <ContactItem contact={contact} />\n          </Item>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  /* margin-left: 30px; */\n  font-size: 16px;\n`;\n/* \n  .btn {\n    display: inline-flex;\n    padding: 8px 12px;\n    border-radius: 4px;\n    border: none;\n    font: inherit;\n    cursor: pointer;\n    background-color: #e2e5e8;\n    color: inherit;\n  }\n\n  .btn.isSelected {\n    background-color: #1976d2;\n    color: #fff;\n  }\n\n  .btn:hover {\n    background-color: #1976d2;\n    color: #fff;\n  }\n\n  .btn:active {\n    background-color: #1565c0;\n    color: #fff;\n  } */\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n","import { useDispatch, useSelector } from 'react-redux';\n// import { toast } from 'react-toastify';\n\nimport { Button } from './ContactsForm.styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const form = evt.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    for (const contact of contacts) {\n      if (contact.name === name) {\n        // toast.info('This contact exist in your list');\n        console.log('This contact exist in your list');\n        return;\n      }\n    }\n\n    dispatch(addContact({ name, number }));\n    form.reset();\n\n    // if (name !== '') {\n    //   dispatch(addContact({ name, number }));\n    //   form.reset();\n    //   return;\n    // }\n    // alert('Contact cannot be empty. Enter some name!');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"\">\n        Name\n        <br />\n        <input\n          type=\"text\"\n          name=\"name\"\n          // placeholder=\"Enter contact's name...\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <br />\n      <label htmlFor=\"\">\n        Number\n        <br />\n        <input\n          type=\"tel\"\n          name=\"number\"\n          // placeholder=\"Enter contact's number...\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <br />\n      <Button type=\"submit\">Add contact</Button>\n    </form>\n  );\n};\n\n// import { useDispatch, useSelector } from 'react-redux';\n// import { toast } from 'react-toastify';\n\n// import { Button } from './ContactsForm.styled';\n// import { addContact } from 'redux/contactsSlice';\n// import { getContacts } from 'redux/selectors';\n\n// export const ContactForm = () => {\n//   const dispatch = useDispatch();\n//   const contacts = useSelector(getContacts);\n\n//   const handleSubmit = evt => {\n//     evt.preventDefault();\n\n//     const form = evt.target;\n//     const name = form.elements.name.value;\n//     const number = form.elements.number.value;\n\n//     for (const contact of contacts) {\n//       if (contact.name === name) {\n//         toast.info('This contact exist in your list');\n//         return;\n//       }\n//     }\n//     dispatch(addContact({ name, number }));\n//     form.reset();\n//   };\n\n//   // const handleChange = evt => {\n//   //   const {name, value} = evt.currentTarget;\n//   //   dispatch(changeFilter(filter));\n//   // };\n\n//   // const handleChange = evt => {\n//   //   const { name, value } = evt.target;\n//   //   setInputValues({ ...inputValues, [name]: value });\n//   // };\n\n//   // const handleSubmit = evt => {\n//   //   evt.preventDefault();\n//   //   onSubmit({ ...inputValues });\n\n//   //   setInputValues({ name: '', number: '' });\n//   // };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <label htmlFor=\"\">\n//         Name\n//         <br />\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//           title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//           required\n//           // onChange={handleChange}\n//         />\n//       </label>\n//       <br />\n//       <label htmlFor=\"\">\n//         Number\n//         <br />\n//         <input\n//           type=\"tel\"\n//           name=\"number\"\n//           pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//           title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//           required\n//           // onChange={handleChange}\n//         />\n//       </label>\n//       <br />\n//       <Button type=\"submit\">Add contact</Button>\n//     </form>\n//   );\n// };\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { changeFilter } from 'redux/filterSlice';\n\nexport const FilterBox = ({ value }) => {\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = evt => {\n    const filter = evt.currentTarget.value;\n    dispatch(changeFilter(filter));\n    console.log('filter: ', filter);\n  };\n\n  return (\n    <label htmlFor=\"\">\n      Find contacts by name\n      <br />\n      <input\n        type=\"text\"\n        name=\"filterContacts\"\n        value={value}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        // placeholder=\"Enter name for search...\"\n        onChange={handleChangeFilter}\n      />\n    </label>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n\nimport { ContactListBox } from 'components/ContactsList/ContactsList';\n// import { TaskEditor } from 'components/TaskEditor/TaskEditor';\nimport { ContactForm } from 'components/ContactsForm/ContactsForm';\nimport { FilterBox } from 'components/ContactsFilter/ContactsFilter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      {/* <TaskEditor /> */}\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <FilterBox />\n      <ContactListBox />\n    </>\n  );\n}\n"],"names":["ContactItem","contact","dispatch","useDispatch","type","onClick","deleteContact","id","name","number","Item","styled","ContactListBox","contacts","useSelector","selectContacts","filter","selectFilter","visibleContacts","toLowerCase","includes","console","log","map","Button","state","items","selectIsLoading","isLoading","ContactForm","onSubmit","evt","preventDefault","form","target","elements","value","addContact","reset","htmlFor","pattern","title","required","FilterBox","onChange","currentTarget","changeFilter","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}