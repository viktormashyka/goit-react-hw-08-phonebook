{"version":3,"file":"static/js/21.2beed41a.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","redux/filter/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsItem/ContactsItem.module.css?8722","components/ContactsItem/ContactsItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsForm/ContactsForm.module.css?d5f2","components/ContactsForm/ContactsForm.jsx","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsFilter/ContactsFilter.module.css?d01d","components/ContactsFilter/ContactsFilter.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","export const selectFilter = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactsItem_wrapper__Lx96Q\",\"text\":\"ContactsItem_text__-tF8m\",\"button\":\"ContactsItem_button__uPo7U\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport css from './ContactsItem.module.css';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <div className={css.wrapper}>\n      <p className={css.text}>{contact.name}:</p>\n      <p className={css.text}>{contact.number}</p>\n      <button type=\"button\" className={css.button} onClick={handleDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__mmE3Y\"};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { ContactItem } from 'components/ContactsItem/ContactsItem';\nimport css from './ContactsList.module.css';\n\nexport const ContactListBox = () => {\n  const contacts = useSelector(selectContacts);\n\n  const filter = useSelector(selectFilter);\n\n  const getVisibleContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  console.log('contacts: ', contacts);\n  console.log('filter: ', filter);\n  console.log('visibleContacts: ', visibleContacts);\n\n  return (\n    <div>\n      <ul className={css.list}>\n        {visibleContacts.map(contact => (\n          <li key={contact.id}>\n            <ContactItem contact={contact} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactsForm_form__1Y65-\",\"label\":\"ContactsForm_label__Z7jht\",\"button\":\"ContactsForm_button__zuUB3\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nimport css from './ContactsForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const form = evt.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    for (const contact of contacts) {\n      if (contact.name === name) {\n        toast.info('This contact exist in your list');\n        // console.log('This contact exist in your list');\n        return;\n      }\n    }\n    dispatch(addContact({ name, number }));\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label} htmlFor=\"\">\n        Name\n        <br />\n        <input\n          type=\"text\"\n          name=\"name\"\n          // placeholder=\"Enter contact's name...\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <br />\n      <label className={css.label} htmlFor=\"\">\n        Number\n        <br />\n        <input\n          type=\"tel\"\n          name=\"number\"\n          // placeholder=\"Enter contact's number...\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <br />\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"ContactsFilter_label__48a3p\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/filter/slice';\nimport css from './ContactsFilter.module.css';\n\nexport const FilterBox = ({ value }) => {\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = evt => {\n    const filter = evt.currentTarget.value;\n    dispatch(changeFilter(filter));\n    console.log('filter: ', filter);\n  };\n\n  return (\n    <label className={css.label} htmlFor=\"\">\n      Find contacts by name\n      <br />\n      <input\n        type=\"text\"\n        name=\"filterContacts\"\n        value={value}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        // placeholder=\"Enter name for search...\"\n        onChange={handleChangeFilter}\n      />\n    </label>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n\nimport { ContactListBox } from 'components/ContactsList/ContactsList';\n// import { TaskEditor } from 'components/TaskEditor/TaskEditor';\nimport { ContactForm } from 'components/ContactsForm/ContactsForm';\nimport { FilterBox } from 'components/ContactsFilter/ContactsFilter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\n// const styles = {\n//   container: {\n//     minHeight: 'calc(100vh - 50px)',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n//   title: {\n//     fontWeight: 500,\n//     fontSize: 48,\n//     textAlign: 'center',\n//   },\n// };\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      {/* <TaskEditor /> */}\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <FilterBox />\n      <ContactListBox />\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","ContactItem","contact","dispatch","useDispatch","className","css","name","number","type","onClick","deleteContact","id","ContactListBox","useSelector","visibleContacts","toLowerCase","includes","console","log","map","ContactForm","onSubmit","evt","preventDefault","form","target","elements","value","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","toast","addContact","reset","htmlFor","pattern","title","required","FilterBox","onChange","currentTarget","changeFilter","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}